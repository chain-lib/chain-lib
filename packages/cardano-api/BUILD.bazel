load("@build_bazel_rules_nodejs//:index.bzl", "js_library", "pkg_npm")
load("@npm//@bazel/typescript:index.bzl", "ts_config", "ts_project")
load("@npm//webpack-cli:index.bzl", webpack = "webpack_cli")
load("@npm//typedoc:index.bzl", typedoc = "typedoc")
load("@npm//http-server:index.bzl", "http_server")
load("@bazel_distribution//npm:rules.bzl","assemble_npm","deploy_npm")
load("@bazel_skylib//rules:write_file.bzl","write_file")
load(
    "@envfile//:environment.bzl", 
    "STABLE_VERSION_NUMBER",
    "GITHUB_USERNAME",
    "GITHUB_EMAIL",
    "GITHUB_TOKEN"
)
load("//tools:deployment.bzl","deployment")
load("//tools:deploy_github.bzl","deploy_github")


package(default_visibility = ["//visibility:public"])

typedoc(
    name = "documentation",
    args = [
            "--out",
            "$(@D)",
            "--entryPointStrategy",
            "expand",
            "./$(rootpath tsconfig.json)",
            "tsconfig.json",
            "--githubPages",
            "false",
            "--emit",
            "both",
            "./$(rootpath src/CardanoAPI.ts)",
            "./$(rootpath src/Spend/Send.ts)",
            "./$(rootpath src/Commands.ts)",
            "./$(rootpath src/DetectCardanoLoad.ts)",
            "./$(rootpath src/OnchainData/AbstractOnchainData.ts)",
            "./$(rootpath src/OnchainData/Blockfrost.ts)",
           ],
    data = glob(["src/**/*.ts"]) + [
        "//:tsconfig.json",
        "tsconfig.json",
        "README.md",
        "package.json",
        "@npm//:node_modules"
    ],
    output_dir = True,
    tags = ["documentation"]
)

http_server(
    name = "serve_documentation",
    data = [
        ":documentation"
    ],
    args = ["."],
    tags = ["documentation","local"]
)

deploy_github(
    name = "deploy_documentation",
    username=GITHUB_USERNAME,
    build_target_html_files="index.html modules.html",
    cname="cardano-api.chain-lib.com",
    token=GITHUB_TOKEN,
    srcs = [":documentation"],
    org = deployment['github.organisation'],
    repo = deployment["github.repository.cardano-api"],
    tags = ["documentation","production"],
)

ts_config(
    name = "tsconfig_lib",
    src = "tsconfig.json",
    deps = ["//:tsconfig"],
)

ts_project(
    name = "build",
    srcs = glob(["src/**/*.ts"]),
    composite = True,
    declaration = True,
    extends = "tsconfig_lib",
    incremental = True,
    resolve_json_module = True,
    deps = [
        "@npm//@emurgo/cardano-serialization-lib-asmjs",
        "@npm//axios",
        "@npm//buffer",
    ],
)

webpack(
    name = "bundle",
    args = [
        "./$(execpath src/index.js)",
        "--config",
        "$(execpath webpack.config.js)",
        "-o",
        "$(@D)",
        "--mode",
        "production",
    ],
    data = [
        "src/index.js",
        "webpack.config.js",
        ":build",
        "@npm//:node_modules",
    ],
    output_dir = True,
)

js_library(
    name = "js_library",
    package_name = "@chain-lib/cardano-api",
    srcs = ["package.json"],
    deps = [
        ":build",
        ":bundle",
        ":tsconfig_lib",
    ],
)

pkg_npm(
    name = "package",
    package_name = "@chain-lib/cardano-api",
    srcs = [
        "README.md",
        "package.json",
    ],
    substitutions = {"0.0.0-PLACEHOLDER": STABLE_VERSION_NUMBER},
    tgz = "chain-lib-cardano-api.tgz",
    validate = True,
    deps = [
        "README.md",
        ":build",
        ":bundle",
    ],
)
