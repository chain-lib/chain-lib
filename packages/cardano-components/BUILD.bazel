load("@build_bazel_rules_nodejs//:index.bzl", "pkg_npm")
load("@npm//@bazel/typescript:index.bzl", "ts_config", "ts_project")
load("@npm//webpack-cli:index.bzl", webpack = "webpack_cli")
load("@npm//typedoc:index.bzl", "typedoc")
load("@npm//http-server:index.bzl", "http_server")
load("@npm//@storybook/web-components:index.bzl", storybook = "build_storybook")
load("@bazel_distribution//github:rules.bzl","deploy_github")
load("@bazel_distribution//npm:rules.bzl","assemble_npm","deploy_npm")

load("@envfile//:environment.bzl", "STORYBOOK_CARDANO_BLOCKFROST_TESTNET", "STORYBOOK_CARDANO_ADDRESS","STABLE_VERSION_NUMBER")

load("@bazel_skylib//rules:write_file.bzl","write_file")

package(default_visibility = ["//visibility:public"])

typedoc(
    name = "documentation",
    args = [
            "--out",
            "$(@D)",
            "--entryPointStrategy",
            "expand",
            "--tsconfig",
            "./$(rootpath tsconfig.json)",
            "--githubPages",
            "false",
            "--emit",
            "both",
            "./$(rootpath src/components/index.ts)",
            "./$(rootpath src/react/index.ts)",
            "./$(rootpath src/redux/index.ts)",
           ],
    data = glob(["src/**/*.ts"]) + [
        "//:tsconfig.json",
        "//packages/cardano-api:js_library",
        "tsconfig.json",
        "README.md",
        "package.json",
        "@npm//:node_modules"
    ],
    output_dir = True,
    tags = ["documentation"]
)

http_server(
    name = "serve_documentation",
    data = [
        ":documentation"
    ],
    args = ["."],
    tags = ["documentation","local"]
)

write_file(
    name = "version_file",
    out = "version_file.txt",
    content = [STABLE_VERSION_NUMBER],
    tags = ["documentation","production"]
)

write_file(
    name = "description_file",
    out = "description.txt",
    content = ["Updated documentation for", STABLE_VERSION_NUMBER],
    tags = ["documentation","production"]
)

deploy_github(
    name = "deploy_documentation",
    archive = ":documentation",
    organisation = "chain-lib",
    release_description = ":description_file",
    draft = True,
    repository = "cardano-components",
    title = STABLE_VERSION_NUMBER,
    tags = ["documentation","production"],
    version_file = ":version_file"
)

ts_config(
    name = "tsconfig_lib",
    src = "tsconfig.json",
    deps = [
        "//:tsconfig",
        "//packages/cardano-api:tsconfig_lib",
    ],
)

ts_project(
    name = "build",
    srcs = glob(["src/**/*.ts"]),
    composite = True,
    declaration = True,
    incremental = True,
    resolve_json_module = True,
    tsconfig = "tsconfig_lib",
    deps = [
        "//packages/cardano-api:js_library",
        "@npm//@emurgo/cardano-serialization-lib-browser",
        "@npm//@lit-labs/react",
        "@npm//@material/mwc-button",
        "@npm//@material/mwc-menu",
        "@npm//@types/react",
        "@npm//axios",
        "@npm//buffer",
        "@npm//lit",
        "@npm//lit-element",
        "@npm//pwa-helpers",
        "@npm//react",
        "@npm//redux",
        "@npm//redux-thunk",
        "@npm//tslib",
        "@npm//@types/node"
    ],
)

webpack(
    name = "bundle",
    args = [
        "./$(execpath src/components/index.js)",
        "./$(execpath src/react/index.js)",
        "./$(execpath src/redux/index.js)",
        "--config",
        "$(execpath webpack.config.js)",
        "-o",
        "$(@D)",
        "--mode",
        "production",
    ],
    data = [
        "src/components/index.js",
        "src/react/index.js",
        "src/redux/index.js",
        "webpack.config.js",
        ":build",
        "//packages/cardano-api:js_library",
        "@npm//:node_modules",
    ],
    output_dir = True,
)

pkg_npm(
    name = "package",
    package_name = "@chain-lib/cardano-components",
    srcs = [
        "README.md",
        "package.json",
    ],
    substitutions = {
        "0.0.0-PLACEHOLDER": STABLE_VERSION_NUMBER,
        "CHAIN-LIB-CARDANO-API-0.0.0": STABLE_VERSION_NUMBER,
    },
    tgz = "chain-lib-cardano-components.tgz",
    validate = True,
    deps = [
        "README.md",
        ":build",
        ":bundle",
    ],
)

filegroup(
    name = ".storybook",
    srcs = glob([".storybook/*"]),
    tags = ["storybook"],
)

storybook(
    name = "build_storybook",
    args = [
        "-c",
        "./packages/cardano-components/.storybook",
        "-o",
        "$(@D)",
    ],
    data = glob(["src/**/*.ts"]) + [
        ":.storybook",
        "@npm//:node_modules", 
        "//:tsconfig.json",
        "tsconfig.json",
        "//packages/cardano-api:js_library",
        "webpack.config.js",
        "package.json",
        "//:.env",
    ],
    env = {
        "STORYBOOK_CARDANO_ADDRESS": STORYBOOK_CARDANO_ADDRESS,
        "STORYBOOK_CARDANO_BLOCKFROST_TESTNET": STORYBOOK_CARDANO_BLOCKFROST_TESTNET,
    },
    tags = ["storybook"],
    output_dir = True
)

http_server(
    name = "serve_storybook",
    data = [
        ":build_storybook",
    ],
    args = [
        "./packages/cardano-components/build_storybook/",
        "-c-1",
    ],
    tags = ["storybook"]
)