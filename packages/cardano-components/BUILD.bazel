load("@build_bazel_rules_nodejs//:index.bzl", "pkg_npm")
load("@dependencies//@bazel/typescript:index.bzl", "ts_config", "ts_project")
load("@dependencies//webpack-cli:index.bzl", webpack = "webpack_cli")

package(default_visibility = ["//visibility:public"])

ts_config(
    name = "tsconfig_lib",
    src = "tsconfig.json",
    deps = ["//:tsconfig", "//packages/cardano-api:tsconfig_lib"],
)

ts_project(
    name = "build",
    srcs = glob(["src/**/*.ts"]),
    composite = True,
    declaration = True,
    incremental = True,
    resolve_json_module = True,
    tsconfig = "tsconfig_lib",
    deps = [
        "@dependencies//@emurgo/cardano-serialization-lib-browser",
        "@dependencies//@lit-labs/react",
        "@dependencies//@material/mwc-button",
        "@dependencies//@types/react",
        "@dependencies//axios",
        "@dependencies//buffer",
        "@dependencies//lit",
        "@dependencies//lit-element",
        "@dependencies//pwa-helpers",
        "@dependencies//react",
        "@dependencies//redux",
        "@dependencies//redux-thunk",
        "@dependencies//tslib",
        "//packages/cardano-api:js_library"
    ],
)

webpack(
    name = "dist",
    args = [
        "--entry",
        "$(execpath src/index.js)",
        "$(execpath src/react/index.js)",
        "$(execpath src/redux/index.js)",
        "--config",
        "$(execpath webpack.config.js)",
        "-o",
        "$(@D)",
    ],
    data = [
        "src/index.js",
        "src/react/index.js",
        "src/redux/index.js",
        "webpack.config.js",
        ":build",
        "@dependencies//:node_modules",
        "//packages/cardano-api:packed_js_library"
    ],
    output_dir = True,
)

pkg_npm(
    name = "package",
    package_name = "@chain-lib/cardano-components",
    srcs = ["package.json","README.md"],
    deps = [":dist","README.md"],
    validate=True,
    tgz="chain-lib-cardano-components.tgz"
)