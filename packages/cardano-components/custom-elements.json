{
  'schemaVersion': '1.0.0',
  'readme': '',
  'modules': [
    {
      'kind': 'javascript-module',
      'path': 'pkg/index.js',
      'declarations': [],
      'exports': []
    },
    {
      'kind': 'javascript-module',
      'path': 'src/index.ts',
      'declarations': [],
      'exports': [
        {
          'kind': 'js',
          'name': '*',
          'declaration': {
            'name': '*',
            'package': './components/'
          }
        },
        {
          'kind': 'js',
          'name': '*',
          'declaration': {
            'name': '*',
            'package': './redux/'
          }
        }
      ]
    },
    {
      'kind': 'javascript-module',
      'path': 'src/components/index.ts',
      'declarations': [],
      'exports': [
        {
          'kind': 'js',
          'name': '*',
          'declaration': {
            'name': '*',
            'package': './CardanoStakeButton/CardanoStakeButton'
          }
        },
        {
          'kind': 'js',
          'name': '*',
          'declaration': {
            'name': '*',
            'package': './ConnectWallet/ConnectWallet'
          }
        }
      ]
    },
    {
      'kind': 'javascript-module',
      'path': 'src/helper/Blockfrost.ts',
      'declarations': [],
      'exports': []
    },
    {
      'kind': 'javascript-module',
      'path': 'src/helper/CardanoCommands.ts',
      'declarations': [
        {
          'kind': 'variable',
          'name': 'Loader',
          'default': 'new Commands()'
        }
      ],
      'exports': [
        {
          'kind': 'js',
          'name': 'default',
          'declaration': {
            'name': 'Loader',
            'module': 'src/helper/CardanoCommands.ts'
          }
        }
      ]
    },
    {
      'kind': 'javascript-module',
      'path': 'src/helper/LoadWallet.ts',
      'declarations': [
        {
          'kind': 'variable',
          'name': 'Loader',
          'default': 'new LoadClass()'
        }
      ],
      'exports': [
        {
          'kind': 'js',
          'name': 'default',
          'declaration': {
            'name': 'Loader',
            'module': 'src/helper/LoadWallet.ts'
          }
        }
      ]
    },
    {
      'kind': 'javascript-module',
      'path': 'src/helper/SelectCoin.ts',
      'declarations': [
        {
          'kind': 'variable',
          'name': 'SelectCoin',
          'type': {
            'text': 'object'
          },
          'default': '{\n    /**\n     * Set protocol parameters required by the algorithm\n     * @param {string} minUTxO\n     * @param {string} minFeeA\n     * @param {string} minFeeB\n     * @param {string} maxTxSize\n     */\n    setProtocolParameters: (minUTxO : string, minFeeA : string, minFeeB : string, maxTxSize : string) => {\n      protocolParameters = {\n        minUtxO: parseInt(minUTxO,10),\n        minFeeA: parseInt(minFeeA,10),\n        minFeeB: parseInt(minFeeB,10),\n        maxTxSize: parseInt(maxTxSize,10),\n      };\n    },\n\n    randomImprove: async (inputs : UTxOList, outputs : TransactionOutputs, limit : number) : Promise<SelectionResult> => {\n      if (!protocolParameters)\n        throw new Error(\n          \'Protocol parameters not set. Use setProtocolParameters().\'\n        );\n  \n      const _minUTxOValue : any = BigInt(outputs.len()) * BigInt(protocolParameters.minUtxO);\n  \n      let utxoSelection : UtxOSelection = {\n        selection: [],\n        remaining: [...inputs], // Shallow copy\n        subset: [],\n        amount: Loader.Cardano.Value.new(Loader.Cardano.BigNum.from_str(\'0\')),\n      };\n  \n      const mergedOutputsAmounts = mergeOutputsAmounts(outputs);\n  \n      // Explode amount in an array of unique asset amount for comparison\'s sake\n      let splitOutputsAmounts = splitAmounts(mergedOutputsAmounts);\n  \n      // Phase 1: RandomSelect\n      splitOutputsAmounts.forEach((output) => {\n\n        createSubSet(utxoSelection, output); // Narrow down for NatToken UTxO\n  \n        try {\n          utxoSelection = randomSelect(\n            cloneUTxOSelection(utxoSelection), // Deep copy in case of fallback needed\n            output,\n            limit - utxoSelection.selection.length,\n            _minUTxOValue\n          );\n        } catch (e : any) {\n          if (e.message === \'INPUT_LIMIT_EXCEEDED\') {\n            // Limit reached : Fallback on DescOrdAlgo\n            utxoSelection = descSelect(\n              utxoSelection,\n              output,\n              limit - utxoSelection.selection.length,\n              _minUTxOValue\n            );\n          } else {\n            throw e;\n          }\n        }\n      });\n  \n      // Phase 2: Improve\n      splitOutputsAmounts = sortAmountList(splitOutputsAmounts);\n  \n      splitOutputsAmounts.forEach((output) => {\n        createSubSet(utxoSelection, output); // Narrow down for NatToken UTxO\n        \n        const ideal : Value = Loader.Cardano.Value.new(Loader.Cardano.BigNum.from_str(\'0\')).checked_add(output).checked_add(output);\n        const maximum : Value = Loader.Cardano.Value.new(Loader.Cardano.BigNum.from_str(\'0\')).checked_add(ideal).checked_add(output);\n        const range : ImproveRange = {ideal, maximum};\n\n        improve(\n          utxoSelection,\n          output,\n          limit - utxoSelection.selection.length,\n          range\n        );\n      });\n  \n      return {\n        input: utxoSelection.selection,\n        output: outputs,\n        remaining: utxoSelection.remaining,\n        amount: utxoSelection.amount,\n        change: utxoSelection.amount.checked_sub(mergedOutputsAmounts),\n      };\n    },\n  }'
        }
      ],
      'exports': [
        {
          'kind': 'js',
          'name': 'default',
          'declaration': {
            'name': 'SelectCoin',
            'module': 'src/helper/SelectCoin.ts'
          }
        }
      ]
    },
    {
      'kind': 'javascript-module',
      'path': 'src/helper/index.ts',
      'declarations': [
        {
          'kind': 'variable',
          'name': 'AddressReturnType',
          'type': {
            'text': 'object'
          },
          'default': '{\n    hex : \'hex\',\n    bech32 : \'bech32\'\n}'
        }
      ],
      'exports': [
        {
          'kind': 'js',
          'name': 'AddressReturnType',
          'declaration': {
            'name': 'AddressReturnType',
            'module': 'src/helper/index.ts'
          }
        }
      ]
    },
    {
      'kind': 'javascript-module',
      'path': 'src/react/ReactCardanoStakeButton.ts',
      'declarations': [
        {
          'kind': 'variable',
          'name': 'ReactCardanoStakeButton'
        }
      ],
      'exports': [
        {
          'kind': 'js',
          'name': 'ReactCardanoStakeButton',
          'declaration': {
            'name': 'ReactCardanoStakeButton',
            'module': 'src/react/ReactCardanoStakeButton.ts'
          }
        }
      ]
    },
    {
      'kind': 'javascript-module',
      'path': 'src/react/ReactConnectWallet.ts',
      'declarations': [
        {
          'kind': 'variable',
          'name': 'ReactConnectWallet'
        }
      ],
      'exports': [
        {
          'kind': 'js',
          'name': 'ReactConnectWallet',
          'declaration': {
            'name': 'ReactConnectWallet',
            'module': 'src/react/ReactConnectWallet.ts'
          }
        }
      ]
    },
    {
      'kind': 'javascript-module',
      'path': 'src/react/index.ts',
      'declarations': [],
      'exports': [
        {
          'kind': 'js',
          'name': '*',
          'declaration': {
            'name': '*',
            'package': './ReactCardanoStakeButton'
          }
        },
        {
          'kind': 'js',
          'name': '*',
          'declaration': {
            'name': '*',
            'package': './ReactConnectWallet'
          }
        }
      ]
    },
    {
      'kind': 'javascript-module',
      'path': 'src/redux/index.ts',
      'declarations': [
        {
          'kind': 'variable',
          'name': 'store'
        }
      ],
      'exports': [
        {
          'kind': 'js',
          'name': 'store',
          'declaration': {
            'name': 'store',
            'module': 'src/redux/index.ts'
          }
        }
      ]
    },
    {
      'kind': 'javascript-module',
      'path': 'src/components/CardanoStakeButton/CardanoStakeButton.stories.ts',
      'declarations': [
        {
          'kind': 'function',
          'name': 'Primary'
        }
      ],
      'exports': [
        {
          'kind': 'js',
          'name': 'default',
          'declaration': {
            'module': 'src/components/CardanoStakeButton/CardanoStakeButton.stories.ts'
          }
        },
        {
          'kind': 'js',
          'name': 'Primary',
          'declaration': {
            'name': 'Primary',
            'module': 'src/components/CardanoStakeButton/CardanoStakeButton.stories.ts'
          }
        }
      ]
    },
    {
      'kind': 'javascript-module',
      'path': 'src/components/CardanoStakeButton/CardanoStakeButton.ts',
      'declarations': [
        {
          'kind': 'class',
          'description': '',
          'name': 'CardanoStakeButton',
          'members': [
            {
              'kind': 'field',
              'name': 'clickHandler'
            }
          ],
          'superclass': {
            'name': 'LitElement',
            'package': 'lit'
          },
          'tagName': 'cardano-stake-button',
          'customElement': true
        }
      ],
      'exports': [
        {
          'kind': 'js',
          'name': 'CardanoStakeButton',
          'declaration': {
            'name': 'CardanoStakeButton',
            'module': 'src/components/CardanoStakeButton/CardanoStakeButton.ts'
          }
        },
        {
          'kind': 'custom-element-definition',
          'name': 'cardano-stake-button',
          'declaration': {
            'name': 'CardanoStakeButton',
            'module': 'src/components/CardanoStakeButton/CardanoStakeButton.ts'
          }
        }
      ]
    },
    {
      'kind': 'javascript-module',
      'path': 'src/components/ConnectWallet/ConnectWallet.stories.ts',
      'declarations': [
        {
          'kind': 'function',
          'name': 'Primary'
        }
      ],
      'exports': [
        {
          'kind': 'js',
          'name': 'default',
          'declaration': {
            'module': 'src/components/ConnectWallet/ConnectWallet.stories.ts'
          }
        },
        {
          'kind': 'js',
          'name': 'Primary',
          'declaration': {
            'name': 'Primary',
            'module': 'src/components/ConnectWallet/ConnectWallet.stories.ts'
          }
        }
      ]
    },
    {
      'kind': 'javascript-module',
      'path': 'src/components/ConnectWallet/ConnectWallet.ts',
      'declarations': [
        {
          'kind': 'class',
          'description': '',
          'name': 'CardanoWalletButton',
          'members': [
            {
              'kind': 'field',
              'name': 'wallet',
              'type': {
                'text': 'boolean'
              },
              'default': 'false'
            },
            {
              'kind': 'field',
              'name': 'connectedValue',
              'type': {
                'text': 'string'
              },
              'default': '\'Connected\'',
              'attribute': 'connectedValue'
            },
            {
              'kind': 'field',
              'name': 'disconnectedValue',
              'type': {
                'text': 'string'
              },
              'default': '\'Please Connect Wallet\'',
              'attribute': 'disconnectedValue'
            },
            {
              'kind': 'field',
              'name': 'bech32',
              'type': {
                'text': 'boolean'
              },
              'default': 'true',
              'attribute': 'bech32'
            },
            {
              'kind': 'method',
              'name': 'stateChanged',
              'parameters': [
                {
                  'name': 'state',
                  'type': {
                    'text': 'any'
                  }
                }
              ]
            },
            {
              'kind': 'method',
              'name': '_eventHandler',
              'parameters': [
                {
                  'name': 'state',
                  'type': {
                    'text': 'any'
                  }
                }
              ]
            },
            {
              'kind': 'field',
              'name': 'getUnusedAddresses'
            },
            {
              'kind': 'field',
              'name': 'getUsedAddresses'
            },
            {
              'kind': 'field',
              'name': 'getRewardAddress'
            },
            {
              'kind': 'field',
              'name': 'getChangeAddress'
            },
            {
              'kind': 'field',
              'name': 'clickHandler'
            },
            {
              'kind': 'field',
              'name': 'onclick'
            }
          ],
          'attributes': [
            {
              'name': 'connectedValue',
              'type': {
                'text': 'string'
              },
              'default': '\'Connected\'',
              'fieldName': 'connectedValue'
            },
            {
              'name': 'disconnectedValue',
              'type': {
                'text': 'string'
              },
              'default': '\'Please Connect Wallet\'',
              'fieldName': 'disconnectedValue'
            },
            {
              'name': 'bech32',
              'type': {
                'text': 'boolean'
              },
              'default': 'true',
              'fieldName': 'bech32'
            }
          ],
          'mixins': [
            {
              'name': 'connect(store)',
              'module': 'src/components/ConnectWallet/ConnectWallet.ts'
            }
          ],
          'superclass': {
            'name': 'Button',
            'package': '@material/mwc-button'
          },
          'tagName': 'cardano-wallet-button',
          'customElement': true
        }
      ],
      'exports': [
        {
          'kind': 'js',
          'name': 'CardanoWalletButton',
          'declaration': {
            'name': 'CardanoWalletButton',
            'module': 'src/components/ConnectWallet/ConnectWallet.ts'
          }
        },
        {
          'kind': 'custom-element-definition',
          'name': 'cardano-wallet-button',
          'declaration': {
            'name': 'CardanoWalletButton',
            'module': 'src/components/ConnectWallet/ConnectWallet.ts'
          }
        }
      ]
    },
    {
      'kind': 'javascript-module',
      'path': 'src/redux/cardanoWallet/actions.ts',
      'declarations': [
        {
          'kind': 'function',
          'name': 'connectWallet',
          'parameters': [
            {
              'name': 'dispatch',
              'type': {
                'text': 'any'
              }
            }
          ]
        },
        {
          'kind': 'function',
          'name': 'initalizeWallet',
          'parameters': [
            {
              'name': 'dispatch',
              'type': {
                'text': 'any'
              }
            }
          ]
        }
      ],
      'exports': [
        {
          'kind': 'js',
          'name': 'connectWallet',
          'declaration': {
            'name': 'connectWallet',
            'module': 'src/redux/cardanoWallet/actions.ts'
          }
        },
        {
          'kind': 'js',
          'name': 'initalizeWallet',
          'declaration': {
            'name': 'initalizeWallet',
            'module': 'src/redux/cardanoWallet/actions.ts'
          }
        }
      ]
    },
    {
      'kind': 'javascript-module',
      'path': 'src/redux/cardanoWallet/index.ts',
      'declarations': [
        {
          'kind': 'variable',
          'name': 'CARDANO_WALLET',
          'type': {
            'text': 'object'
          },
          'default': '{ \n    CONNECTED: 'cardanoWallet/CONNECTED'\n}'
        }
      ],
      'exports': [
        {
          'kind': 'js',
          'name': 'CARDANO_WALLET',
          'declaration': {
            'name': 'CARDANO_WALLET',
            'module': 'src/redux/cardanoWallet/index.ts'
          }
        }
      ]
    },
    {
      'kind': 'javascript-module',
      'path': 'src/redux/cardanoWallet/reducer.ts',
      'declarations': [],
      'exports': [
        {
          'kind': 'js',
          'name': 'default',
          'declaration': {
            'module': 'src/redux/cardanoWallet/reducer.ts'
          }
        }
      ]
    }
  ]
}
